name: Tests
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true

on: 
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'data/**'
      - 'notebooks/**'
      - 'README.md'
      - '.gitignore'
      - '.github/workflows/Docs.yml'
      - '.github/workflows/Publish.yml'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'doc/**'
      - 'data/**'
      - 'notebooks/**'
      - 'README.md'
      - '.gitignore'
      - '.github/workflows/Docs.yml'
      - '.github/workflows/Publish.yml'
  workflow_dispatch:

jobs:
  build_dists:
    name: Build dists
    runs-on: ubuntu-20.04
    outputs:
      WHEEL_NAME: ${{ steps.dists.outputs.WHEEL_NAME }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        name: Install python
        with: 
          python-version: 3.9
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install twine flake8 build

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Build dists
        id: dists
        run: |
          python -m build --sdist --wheel
          python ci/export_name.py

      - name: Check README rendering for PyPI
        run: twine check dist/*

      - name: Upload sdist result
        uses: actions/upload-artifact@v4
        with:
          name: dists
          path: dist/*
          if-no-files-found: error

  test_sdist:
    name: Test dist for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    needs: build_dists
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: windows-latest
            python: "3.9"
            platform_id: win_amd64
          - os: windows-latest
            python: "3.10"
            platform_id: win_amd64
          - os: windows-latest
            python: "3.11"
            platform_id: win_amd64

          # Linux 64 bit manylinux2014
          - os: ubuntu-latest
            python: "3.9"
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: "3.10"
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: "3.11"
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014

          # MacOS x86_64
          - os: macos-latest
            python: "3.9"
            platform_id: macosx_x86_64
          - os: macos-latest
            python: "3.10"
            platform_id: macosx_x86_64
          - os: macos-latest
            python: "3.11"
            platform_id: macosx_x86_64
    steps:
      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: dists
          path: dist/

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Run tests
        run: |
          pip install dist/${{ needs.build_dists.outputs.WHEEL_NAME }}
          python -c "from lensed_umap.tests import run_tests; run_tests()"
  
